print("---------------------------TASK 1-----------------------------")
# 1.  Напишіть програму, яка пропонує користувачу ввести ціле число
# і визначає чи це число парне чи непарне, чи введені дані коректні.
def checker (num):
    return print("Введене число парне") if num%2==0 else print("Введене число непарне")
while True:
    try:
        num = int(input("Введіть ціле число: "))
        checker(num)
    except ValueError:
        print("Error: Ви повинні ввести ціле число. Попробуйте ще раз\n")

print("---------------------------TASK 2-----------------------------")
# 2.  Напишіть програму, яка пропонує користувачу ввести свій вік,
# після чого виводить повідомлення про те чи вік є парним чи непарним числом.
# Необхідно передбачити можливість введення від’ємного числа,
# в цьому випадку згенерувати власну виняткову ситуацію.
# Головний код має викликати функцію, яка обробляє введену інформацію.

class CustomError(Exception):
    def __init__(self, data):
        self.data = data
    def __str__(self):
        return repr(self.data)
while True:
    try:
        year = int(input("Введіть свій вік: "))
        if year<=0:
            raise CustomError("")
        checker(year)
    except CustomError:
        print("Введено некоректний вік. Попробуйте ще раз.")
    except ValueError:
        print("Error: Ви зробили помилку. Будь ласка, введіть скільки Вам повних років?")


print("---------------------------TASK 3-----------------------------")
# 3.  Напишіть програму для обчислення частки двох чисел,
# які вводяться користувачем послідовно через кому,
# передбачити випадок ділення на нуль
# випадки синтаксичних помилок та випадки інших виняткових ситуацій.
# Використати блоки else та finaly.
def division(x,y):
    return print(x/y)
while  True:
    try:
        x,y = eval(input("Введіть 2 числа через кому для обчислення їх частки: "))
        division(x,y)
    except ValueError:
        print("Error: Неправильно введено 2 числа.")
    except ZeroDivisionError:
        print("Ділення на нуль неможливе.")
    except SyntaxError:
        print("Ви пропустили кому.")
    finally:
        print("Дякуємо, що скористалися нашим ПО.")



print("---------------------------TASK 4-----------------------------")
# 4.  Написати  програму, яка аналізує введене число та в залежності від числа видає день тижня,
# який відповідає цьому числу (1 це Понеділок, 2 це Вівторок і т.д.) .
# Врахувати випадки введення чисел від 8 і більше, а також випадки введення не числових даних.
class CustomError(Exception):
    def __init__(self, data):
        self.data = data
    def __str__(self):
        return repr(self.data)

def analys_number(num):
    days = {1:"Понеділок", 2:"Вівторок", 3:"Середа", 4:"Четвер", 5:"П'ятниця", 6:"Субота", 7:"Неділя"}
    if num <= 0 or num >= 8:
        raise CustomError("")
    return print(days[num])
while True:
    try:
        num = int(input("Введіть число від 1-7: "))
        analys_number(num)

    except ValueError:
        print("Для отримання результату потрібно ввести число, а не текст.\n")
    except CustomError:
        print("Error: Лише число від 1-7.")


